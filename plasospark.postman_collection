{
	"info": {
		"_postman_id": "4afb36dc-1dbf-47e9-9d5a-98f414501969",
		"name": "PySpark",
		"description": "Collection for Plasospark tool. Collection contains all operations provided by Webservice Rest API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6961610"
	},
	"item": [
		{
			"name": "Local upload",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "files[]",
							"description": "Files to be uploaded into Plasospark local storage and preprocessed",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "localhost:5000/upload/files",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"upload",
						"files"
					]
				},
				"description": "Upload multiple files to Plasospark local storage and preprocess uploaded files.\n\nFiles are send inside body as **form-data** using **files\\[\\]** key in body."
			},
			"response": []
		},
		{
			"name": "HDFS upload",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/upload/hdfs",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"upload",
						"hdfs"
					]
				},
				"description": "Upload the preprocessed files into HDFS storage"
			},
			"response": []
		},
		{
			"name": "extract",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"output_file\": \"/output.plaso\", \r\n    \"formatter\": \"json\",\r\n    \"plaso_args\": \"[\\\"--debug\\\", \\\"--single-process\\\", \\\"--parsers\\\", \\\"!rplog\\\"]\",\r\n    \"partitions\": 20,\r\n    \"extraction_test\": \"True\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/extract",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"extract"
					],
					"query": [
						{
							"key": "output_file",
							"value": "/output.plaso",
							"disabled": true
						},
						{
							"key": "formatter",
							"value": "json",
							"disabled": true
						},
						{
							"key": "plaso_args",
							"value": "['--debug', '--single-process', '--parsers', '!rplog']",
							"disabled": true
						},
						{
							"key": "partitions",
							"value": "36",
							"disabled": true
						}
					]
				},
				"description": "Start the extraction with defined parameters in request body.\n\nJSON body parameters:\n\n- output_file - File for saving Plaso output in local storage\n- formatter - Name of required formatter used in  \n    formatting events. If no formatter provided Plaso formatter will be used.\n- plaso_args - Plaso arguments controlling the extraction. For arguments see [Plaso project](https://github.com/log2timeline/plaso)\n- partitions - Size of partition to be used in repartitioning for data-skew optimalization"
			},
			"response": []
		},
		{
			"name": "Delete hdfs",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:5000/delete/hdfs",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"delete",
						"hdfs"
					]
				},
				"description": "Delete all files from HDFS storage"
			},
			"response": []
		},
		{
			"name": "list local",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/list/local",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"list",
						"local"
					]
				},
				"description": "List all files stored in Plasospark local storage"
			},
			"response": []
		},
		{
			"name": "list hdfs",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/list/hdfs",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"list",
						"hdfs"
					]
				},
				"description": "List all files stored in Plasospark HDFS storage"
			},
			"response": []
		}
	]
}